package GUI;

import Bo.PersonaBo;
import Entidad.Persona;
import conexion.Conexion;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.CallableStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author vrb00
 */
public class Frm_Persona extends javax.swing.JFrame {

    private int id_persona;
    private DefaultTableModel tabla;
    private Persona per = new Persona();
    private PersonaBo perBo = new PersonaBo();
    private String mensaje = "";

    /**
     * Creates new form Frm_Persona
     */
    public Frm_Persona() {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        mostrarDatosTabla();
        mostrarRoles();
        obtenerSeleccion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_segundo_apellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_primer_apellido = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_telefono = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_correo = new javax.swing.JTextField();
        btn_agregar = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        btn_buscar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_personas = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        combo_rol = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_rol = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(49, 66, 82));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Personas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addComponent(jLabel2)
                .addContainerGap(308, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jLabel1.setText("Nombre");

        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });

        jLabel3.setText("Primer Apellido");

        jLabel4.setText("Segundo Apellido");

        txt_primer_apellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_primer_apellidoActionPerformed(evt);
            }
        });

        jLabel5.setText("Telefono");

        jLabel6.setText("Correo");

        btn_agregar.setBackground(new java.awt.Color(1, 186, 59));
        btn_agregar.setForeground(new java.awt.Color(255, 255, 255));
        btn_agregar.setText("Agregar");
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });

        btn_editar.setBackground(new java.awt.Color(49, 66, 82));
        btn_editar.setForeground(new java.awt.Color(255, 255, 255));
        btn_editar.setText("Editar");
        btn_editar.setToolTipText("Guardar cambios");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_buscar.setBackground(new java.awt.Color(0, 204, 204));
        btn_buscar.setForeground(new java.awt.Color(255, 255, 255));
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        btn_eliminar.setBackground(new java.awt.Color(255, 0, 0));
        btn_eliminar.setForeground(new java.awt.Color(255, 255, 255));
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        tabla_personas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Apellidos", "Telefono", "Correo", "Rol"
            }
        ));
        tabla_personas.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(tabla_personas);

        jLabel7.setText("Rol");

        combo_rol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona un Rol" }));
        combo_rol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_rolActionPerformed(evt);
            }
        });

        jMenu1.setText("Agregar");

        menu_rol.setText("Rol");
        menu_rol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_rolActionPerformed(evt);
            }
        });
        jMenu1.add(menu_rol);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(btn_agregar)
                .addGap(84, 84, 84)
                .addComponent(btn_editar)
                .addGap(68, 68, 68)
                .addComponent(btn_buscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addComponent(btn_eliminar)
                .addGap(47, 91, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3))
                    .addComponent(jLabel4))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_primer_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_segundo_apellido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_telefono)
                    .addComponent(txt_correo)
                    .addComponent(combo_rol, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_primer_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(txt_correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_segundo_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(combo_rol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_agregar)
                    .addComponent(btn_editar)
                    .addComponent(btn_buscar)
                    .addComponent(btn_eliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menu_rolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_rolActionPerformed
        // TODO add your handling code here:
        Frm_Rol rol = new Frm_Rol();
    }//GEN-LAST:event_menu_rolActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        // TODO add your handling code here:
        /*int selectedRow = tabla_personas.getSelectedRow();

        Object id_persona = tabla_personas.getValueAt(selectedRow, 0);

        int id = (int) id_persona;*/

        try {
            mensaje = perBo.eliminarPersona(id_persona);
            JOptionPane.showMessageDialog(this, mensaje);
            limpiarCampos();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, mensaje);
        }
        mostrarDatosTabla();
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed
        // TODO add your handling code here:
        if (verificaDatos()) {
            try {
                per.setNombre(txt_nombre.getText());
                per.setPrimer_apellido(txt_primer_apellido.getText());
                per.setSegundo_apellido(txt_segundo_apellido.getText());
                per.setTelefono(txt_telefono.getText());
                per.setCorreo(txt_correo.getText());
                per.setId_rol(getRol());
                mensaje = perBo.agregarPersona(per);
                JOptionPane.showMessageDialog(this, mensaje);
                limpiarCampos();
                mostrarDatosTabla();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, mensaje);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tienes que llenar todos los campos");
        }
    }//GEN-LAST:event_btn_agregarActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        // TODO add your handling code here:
        if (verificaDatos()) {
            try {
                per.setId_persona(id_persona);
                per.setNombre(txt_nombre.getText());
                per.setPrimer_apellido(txt_primer_apellido.getText());
                per.setSegundo_apellido(txt_segundo_apellido.getText());
                per.setTelefono(txt_telefono.getText());
                per.setCorreo(txt_correo.getText());
                per.setId_rol(getRol());
                mensaje = perBo.actualizarPersona(per);
                tabla_personas.clearSelection();
                JOptionPane.showMessageDialog(this, mensaje);
                mostrarDatosTabla();
                limpiarCampos();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, mensaje);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tienes que llenar todos los campos");
        }
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        // TODO add your handling code here:
        try {
            ArrayList<Persona> persona = perBo.buscarPersonaNombre(txt_nombre.getText());

            for (Persona p : persona) {
                id_persona = p.getId_persona();
                txt_nombre.setText(p.getNombre());
                txt_primer_apellido.setText(p.getPrimer_apellido());
                txt_segundo_apellido.setText(p.getSegundo_apellido());
                txt_telefono.setText(p.getTelefono());
                txt_correo.setText(p.getCorreo());
                setIndexComboRol(p.getId_rol());
            }
        } catch (Exception sql) {
            JOptionPane.showMessageDialog(null, sql);
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void txt_primer_apellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_primer_apellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_primer_apellidoActionPerformed

    private void combo_rolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_rolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_rolActionPerformed

    private void mostrarDatosTabla() {
        DefaultTableModel contenido = (DefaultTableModel) tabla_personas.getModel();

        contenido.setRowCount(0);

        try {
            Connection conn = Conexion.Conectar();
            
            //Vista
            String procedureCall = "Select * from datos_persona";
            CallableStatement stmt = conn.prepareCall(procedureCall);

            stmt.execute();

            ResultSet resultSet = stmt.getResultSet();
            if (resultSet != null) {
                while (resultSet.next()) {

                    Integer personaID = resultSet.getInt("ID");
                    String nombre = resultSet.getString("Nombre");
                    String apellidos = resultSet.getString("Apellidos");
                    String telefono = resultSet.getString("Telefono");
                    String correo = resultSet.getString("Correo");
                    String rol = resultSet.getString("Rol");

                    // Agregar los datos a la tabla
                    ((DefaultTableModel) tabla_personas.getModel()).addRow(new Object[]{personaID, nombre, apellidos,
                        telefono, correo, rol});
                }
            }

            if (resultSet != null) {
                resultSet.close();
            }
            stmt.close();
            conn.close();

        } catch (Exception e) {
            System.out.println("Error al conectar: " + e);
        }
    }

    private void mostrarRoles() {

        try {
            Connection conn = Conexion.Conectar();
            
            //Vista
            String procedureCall = "Select * from datos_rol";
            CallableStatement stmt = conn.prepareCall(procedureCall);

            stmt.execute();

            ResultSet resultSet = stmt.getResultSet();
            if (resultSet != null) {
                while (resultSet.next()) {

                    Integer rolID = resultSet.getInt("ID");
                    String rol = resultSet.getString("Rol");

                    // Agregar los datos al Combo Box
                    combo_rol.addItem(rolID + "- " + rol);
                }
            }

            if (resultSet != null) {
                resultSet.close();
            }
            stmt.close();
            conn.close();

        } catch (Exception e) {
            System.out.println("Error al conectar: " + e);
        }
    }

    private boolean verificaDatos() {
        boolean verificar = false, verificarD = true;
        String nombre = txt_nombre.getText();
        String primerApellido = txt_primer_apellido.getText();
        String segundoApellido = txt_segundo_apellido.getText();
        String telefono = txt_telefono.getText();
        String correo = txt_correo.getText();

        if (nombre == "" && primerApellido == "" && segundoApellido == ""
                && telefono == "" && correo == "") {
            verificarD = false;
        }

        boolean verificarR = false;
        if (combo_rol.getSelectedIndex() != 0) {
            verificarR = true;
        }

        if (verificarD && verificarR) {
            verificar = true;
        }
        return verificar;
    }

    private int getRol() {
        String Drol = combo_rol.getSelectedItem().toString();
        int id;
        try {
            String rol = Drol.substring(0, 2);
            id = Integer.parseInt(rol + "");
        } catch (Exception e) {
            String rol = Drol.substring(0, 1);
            id = Integer.parseInt(rol + "");
        }
        return id;
    }

    private void setIndexComboRol(int id_rol) {
        for (int i = 1; i < combo_rol.getItemCount(); i++) {

            String item = combo_rol.getItemAt(i);
            char rolc = item.charAt(0);
            int rol = Integer.parseInt(rolc + "");
            if (rol == id_rol) {
                combo_rol.setSelectedIndex(i);
                break;
            }
        }
    }

    private void limpiarCampos() {
        txt_nombre.setText("");
        txt_primer_apellido.setText("");
        txt_segundo_apellido.setText("");
        txt_telefono.setText("");
        txt_correo.setText("");
        try {
            combo_rol.setSelectedIndex(0);
        } catch (ArrayIndexOutOfBoundsException e) {
        }
    }

    private void obtenerSeleccion() {
        // Agregar un ListSelectionListener a la tabla
        tabla_personas.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    // Obtener el número de fila y columna seleccionada
                    int selectedRow = tabla_personas.getSelectedRow();

                    System.out.println(selectedRow);

                    // Obtener la primera celda seleccionada
                    Object selectedData = tabla_personas.getValueAt(selectedRow, 0);

                    String id = selectedData.toString();
                    int idConsulta = Integer.parseInt(id);

                    try {
                        ArrayList<Persona> persona = perBo.buscarPersonaId(idConsulta);

                        for (Persona p : persona) {
                            id_persona = p.getId_persona();
                            txt_nombre.setText(p.getNombre());
                            txt_primer_apellido.setText(p.getPrimer_apellido());
                            txt_segundo_apellido.setText(p.getSegundo_apellido());
                            txt_telefono.setText(p.getTelefono());
                            txt_correo.setText(p.getCorreo());
                            setIndexComboRol(p.getId_rol());
                        }
                    } catch (Exception sql) {
                        JOptionPane.showMessageDialog(null, sql);
                    }
                    //tabla_personas.clearSelection();
                }
            }
        });
        
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_Persona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_Persona().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregar;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JComboBox<String> combo_rol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menu_rol;
    private javax.swing.JTable tabla_personas;
    private javax.swing.JTextField txt_correo;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_primer_apellido;
    private javax.swing.JTextField txt_segundo_apellido;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables
}
